apiVersion: v1
kind: Namespace
metadata:
  name: kubeform
---
# Source: kubeform/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeform
  namespace: kubeform
  labels:
    helm.sh/chart: kubeform-v0.3.0
    app.kubernetes.io/name: kubeform
    app.kubernetes.io/instance: kubeform
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubeform/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubeform
  namespace: kubeform
  labels:
    helm.sh/chart: kubeform-v0.3.0
    app.kubernetes.io/name: kubeform
    app.kubernetes.io/instance: kubeform
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  TF_STATE_ENC_KEY: "TlU4MFR6UjZhakppUlU5b1pqVjFVMWx5VjI0MVVUWTFUSEEyYWtGU2QxQT0="
---
# Source: kubeform/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeform
  labels:
    helm.sh/chart: kubeform-v0.3.0
    app.kubernetes.io/name: kubeform
    app.kubernetes.io/instance: kubeform
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - linode.kubeform.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - google.kubeform.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - aws.kubeform.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - azurerm.kubeform.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - digitalocean.kubeform.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - modules.kubeform.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get", "create", "list", "delete", "deletecollection"]
- apiGroups:
    - ""
  resources:
    - namespaces
  verbs: ["get", "list"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["get", "create", "patch", "delete"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - roles
  - rolebindings
  verbs: ["get", "create", "delete", "patch"]
---
# Source: kubeform/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeform
  labels:
    helm.sh/chart: kubeform-v0.3.0
    app.kubernetes.io/name: kubeform
    app.kubernetes.io/instance: kubeform
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeform
subjects:
- kind: ServiceAccount
  name: kubeform
  namespace: kubeform
---
# Source: kubeform/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeform-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: kubeform
  namespace: kubeform
---
# Source: kubeform/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeform-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: kubeform
  namespace: kubeform
---
# Source: kubeform/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeform
  namespace: kubeform
  labels:
    helm.sh/chart: kubeform-v0.3.0
    app.kubernetes.io/name: kubeform
    app.kubernetes.io/instance: kubeform
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeform
      app.kubernetes.io/instance: kubeform
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeform
        app.kubernetes.io/instance: kubeform
    spec:
      serviceAccountName: kubeform
      containers:
      - name: operator
        securityContext:
          {}
        image: kubeform/kfc:v0.3.0
        imagePullPolicy: IfNotPresent
        env:
          - name: TF_STATE_ENC_KEY
            valueFrom:
              secretKeyRef:
                name: kubeform
                key: TF_STATE_ENC_KEY
          - name: NO_PROXY
            value: 10.43.0.1
        args:
          - run
          - --secret-key=$(TF_STATE_ENC_KEY)
          - --enable-analytics=true
          - --license-file=/var/run/secrets/appscode/license/key.txt
        resources:
          {}
        volumeMounts:
          - mountPath: /var/run/secrets/appscode/license
            name: license
          - mountPath: /tmp/.kfc
            name: kubeform-statefiles
      volumes:
        - name: license
          secret:
            defaultMode: 420
            secretName: kubeform-license
        - name: kubeform-statefiles
          persistentVolumeClaim:
            claimName: kubeform-statefiles
      securityContext:
        {}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kubeform-statefiles
  namespace: kubeform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
#  storageClassName: standard